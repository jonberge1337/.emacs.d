#+STARTUP: overview 
#+PROPERTY: header-args :comments yes :results silent
* Repositorios
  #+BEGIN_SRC emacs-lisp 
  (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)

  #+END_SRC
* Variables de inicio
  #+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t) ; Quitar el mensaje del principio
  (tool-bar-mode -1) ; Quitar el menu de copiar pegar 
  (menu-bar-mode -1) ; Quitar el menu de archivo 
  (scroll-bar-mode -1) ; Quitar la barra de scroll
  (if (eq system-type 'windows-nt)
  (setq default-frame-alist '((font . "Consolas-12:antialias=natural")))
  (setq default-frame-alist '((font . "Dejavu Sans Mono-12")))
  )
  (setq make-backup-files nil) ; stop creating backup~ files
  (setq auto-save-default nil) ; stop creating #autosave# files
  (show-paren-mode 1) ;; remarca parentesis llaves y corchetes
  (setq show-paren-delay 0) ;; evitar tiempo de espera al remarcar
  (setq-default indent-tabs-mode t) ;; tabulaciones no espacios
  (setq-default tab-width 4) ;; tabulaciones de cuatro caracteres
  (setq indent-line-function 'insert-tab)
  (global-linum-mode 1) ;; ver numero de linea

  #+END_SRC
* Try
  #+BEGIN_SRC emacs-lisp
  (use-package try
  :ensure t)

  #+END_SRC
* Which key
  #+BEGIN_SRC emacs-lisp
  (use-package which-key
  :ensure t 
  :config
  (which-key-mode))

  #+END_SRC
* Org mode
  #+BEGIN_SRC emacs-lisp
  (use-package org-bullets
  :ensure t
  :config
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))

  #+END_SRC
* Autopair
  #+BEGIN_SRC emacs-lisp
  (use-package autopair
  :ensure t
  :config
  (autopair-global-mode))

  #+END_SRC
* Ace windows cambiar ventanas facil
  #+BEGIN_SRC emacs-lisp
  (use-package ace-window
  :ensure t
  :init
  (progn
    (global-set-key [remap other-window] 'ace-window)
    (custom-set-faces
     '(aw-leading-char-face
       ((t (:inherit ace-jump-face-foreground :height 3.0))))) 
    ))

  #+END_SRC
* Swiper / Ivy / Counsel
  Swiper gives us a really efficient incremental search with regular expressions
  and Ivy / Counsel replace a lot of ido or helms completion functionality
  #+BEGIN_SRC emacs-lisp
  (use-package counsel
  :ensure t
  )

(use-package ivy
  :ensure t
  :diminish (ivy-mode)
  :bind (("C-x b" . ivy-switch-buffer))
  :config
  (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  (setq ivy-display-style 'fancy))


(use-package swiper
  :ensure try
  :bind (("C-s" . swiper)
	 ("C-r" . swiper)
	 ("C-c C-r" . ivy-resume)
	 ("M-x" . counsel-M-x)
	 ("C-x C-f" . counsel-find-file))
  :config
  (progn
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (setq ivy-display-style 'fancy)
    (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
    ))

  #+END_SRC
* Avy - acceso rapido por letras
  #+BEGIN_SRC emacs-lisp
  (use-package avy
  :ensure t
  :bind ("M-s" . avy-goto-word-1)) ;; changed from char as per jcs

  #+END_SRC
* Autocomplete
  #+BEGIN_SRC emacs-lisp
  (use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)
    ))

  #+END_SRC
* Themes
  #+BEGIN_SRC emacs-lisp
  (use-package gruvbox-theme
  :ensure t
  :config (load-theme 'gruvbox t))

  #+END_SRC
